{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  orderId,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [recipientId, setRecipientId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`/api/user/order/chat/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.chat) {\n          const chatData = response.data.chat;\n          const fetchedMessages = chatData.messages || [];\n          setMessages(fetchedMessages);\n          const currentUserId = getUserIdFromToken(token);\n          if (fetchedMessages.length > 0) {\n            // определяем получателя из первого сообщения\n            const firstMsg = fetchedMessages[0];\n            const recipient = firstMsg.sender_id === currentUserId ? firstMsg.recipient_id : firstMsg.sender_id;\n            setRecipientId(recipient);\n          } else {\n            // если сообщений ещё нет — берём из chat.user_id\n            const recipient = chatData.user_id === currentUserId ? null // возможно, ты сам владелец чата — ждём первого сообщения\n            : chatData.user_id;\n            setRecipientId(recipient);\n          }\n        } else {\n          setError(\"Чат не найден.\");\n        }\n      } catch (err) {\n        console.error(err);\n        setError(\"Ошибка при загрузке сообщений.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orderId) fetchMessages();\n  }, [orderId, token]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const response = await axios.post(`/api/user/order/chat/${orderId}/message`, {\n        content: newMessage,\n        recipient_id: recipientId // может быть null, если ещё нет сообщений\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newMsg = response.data.message;\n\n      // Если recipientId ещё не установлен (впервые отправляем)\n      if (!recipientId) {\n        const currentUserId = getUserIdFromToken(token);\n        const recipient = newMsg.sender_id === currentUserId ? newMsg.recipient_id : newMsg.sender_id;\n        setRecipientId(recipient);\n      }\n      setMessages(prev => [...prev, newMsg]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Ошибка при отправке сообщения.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\u0427\\u0430\\u0442 \\u043F\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443 #\", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.length > 0 ? messages.map(msg => {\n          var _msg$sender, _msg$recipient;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender_id === getUserIdFromToken(token) ? \"message-sent\" : \"message-received\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender_id === getUserIdFromToken(token) ? \"Вы\" : ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || `Пользователь #${msg.sender_id}`, \" \", \"\\u2192 \", ((_msg$recipient = msg.recipient) === null || _msg$recipient === void 0 ? void 0 : _msg$recipient.name) || \"Получатель\", \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"message-timestamp\",\n              children: new Date(msg.created_at).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"message-form mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-2 w-100\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"RLJk48cZs0ojXailQ8tKefrVHQo=\");\n_c = ChatWindow;\nfunction getUserIdFromToken(token) {\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return payload.sub;\n  } catch (e) {\n    return null;\n  }\n}\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","orderId","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","recipientId","setRecipientId","token","localStorage","getItem","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","response","get","headers","Authorization","data","chat","chatData","fetchedMessages","currentUserId","getUserIdFromToken","length","firstMsg","recipient","sender_id","recipient_id","user_id","err","console","handleSendMessage","e","preventDefault","trim","post","content","newMsg","message","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","_msg$sender","_msg$recipient","sender","name","Date","created_at","toLocaleTimeString","hour","minute","id","ref","onSubmit","type","value","onChange","target","placeholder","_c","payload","JSON","parse","atob","split","sub","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Chat/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = ({ orderId, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [recipientId, setRecipientId] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`/api/user/order/chat/${orderId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n    \r\n        if (response.data.chat) {\r\n          const chatData = response.data.chat;\r\n          const fetchedMessages = chatData.messages || [];\r\n          setMessages(fetchedMessages);\r\n    \r\n          const currentUserId = getUserIdFromToken(token);\r\n    \r\n          if (fetchedMessages.length > 0) {\r\n            // определяем получателя из первого сообщения\r\n            const firstMsg = fetchedMessages[0];\r\n            const recipient =\r\n              firstMsg.sender_id === currentUserId\r\n                ? firstMsg.recipient_id\r\n                : firstMsg.sender_id;\r\n            setRecipientId(recipient);\r\n          } else {\r\n            // если сообщений ещё нет — берём из chat.user_id\r\n            const recipient =\r\n              chatData.user_id === currentUserId\r\n                ? null // возможно, ты сам владелец чата — ждём первого сообщения\r\n                : chatData.user_id;\r\n            setRecipientId(recipient);\r\n          }\r\n        } else {\r\n          setError(\"Чат не найден.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"Ошибка при загрузке сообщений.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };    \r\n\r\n    if (orderId) fetchMessages();\r\n  }, [orderId, token]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/user/order/chat/${orderId}/message`,\r\n        {\r\n          content: newMessage,\r\n          recipient_id: recipientId, // может быть null, если ещё нет сообщений\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const newMsg = response.data.message;\r\n\r\n      // Если recipientId ещё не установлен (впервые отправляем)\r\n      if (!recipientId) {\r\n        const currentUserId = getUserIdFromToken(token);\r\n        const recipient = newMsg.sender_id === currentUserId\r\n          ? newMsg.recipient_id\r\n          : newMsg.sender_id;\r\n        setRecipientId(recipient);\r\n      }\r\n\r\n      setMessages((prev) => [...prev, newMsg]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Ошибка при отправке сообщения.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <h5>Чат по заказу #{orderId}</h5>\r\n        <button className=\"btn btn-close\" onClick={onClose}></button>\r\n      </div>\r\n\r\n      <div className=\"chat-body\">\r\n        {loading ? (\r\n          <p>Загрузка...</p>\r\n        ) : (\r\n          <div className=\"chat-messages\">\r\n            {messages.length > 0 ? (\r\n              messages.map((msg) => (\r\n                <div\r\n                  key={msg.id}\r\n                  className={`message ${\r\n                    msg.sender_id === getUserIdFromToken(token)\r\n                      ? \"message-sent\"\r\n                      : \"message-received\"\r\n                  }`}\r\n                >\r\n                  <strong>\r\n                    {msg.sender_id === getUserIdFromToken(token)\r\n                      ? \"Вы\"\r\n                      : msg.sender?.name || `Пользователь #${msg.sender_id}`}{\" \"}\r\n                    → {msg.recipient?.name || \"Получатель\"}:\r\n                  </strong>\r\n                  <p>{msg.content}</p>\r\n                  <small className=\"message-timestamp\">\r\n                    {new Date(msg.created_at).toLocaleTimeString([], {\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                    })}\r\n                  </small>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-messages\">Сообщений пока нет.</div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSendMessage} className=\"message-form mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Введите сообщение...\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary mt-2 w-100\">\r\n            Отправить\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getUserIdFromToken(token) {\r\n  try {\r\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n    return payload.sub;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMsB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCd,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,wBAAwBxB,OAAO,EAAE,EAAE;UAClEyB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUb,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAIU,QAAQ,CAACI,IAAI,CAACC,IAAI,EAAE;UACtB,MAAMC,QAAQ,GAAGN,QAAQ,CAACI,IAAI,CAACC,IAAI;UACnC,MAAME,eAAe,GAAGD,QAAQ,CAAC1B,QAAQ,IAAI,EAAE;UAC/CC,WAAW,CAAC0B,eAAe,CAAC;UAE5B,MAAMC,aAAa,GAAGC,kBAAkB,CAACnB,KAAK,CAAC;UAE/C,IAAIiB,eAAe,CAACG,MAAM,GAAG,CAAC,EAAE;YAC9B;YACA,MAAMC,QAAQ,GAAGJ,eAAe,CAAC,CAAC,CAAC;YACnC,MAAMK,SAAS,GACbD,QAAQ,CAACE,SAAS,KAAKL,aAAa,GAChCG,QAAQ,CAACG,YAAY,GACrBH,QAAQ,CAACE,SAAS;YACxBxB,cAAc,CAACuB,SAAS,CAAC;UAC3B,CAAC,MAAM;YACL;YACA,MAAMA,SAAS,GACbN,QAAQ,CAACS,OAAO,KAAKP,aAAa,GAC9B,IAAI,CAAC;YAAA,EACLF,QAAQ,CAACS,OAAO;YACtB1B,cAAc,CAACuB,SAAS,CAAC;UAC3B;QACF,CAAC,MAAM;UACLzB,QAAQ,CAAC,gBAAgB,CAAC;QAC5B;MACF,CAAC,CAAC,OAAO6B,GAAG,EAAE;QACZC,OAAO,CAAC/B,KAAK,CAAC8B,GAAG,CAAC;QAClB7B,QAAQ,CAAC,gCAAgC,CAAC;MAC5C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIR,OAAO,EAAEsB,aAAa,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACtB,OAAO,EAAEa,KAAK,CAAC,CAAC;EAEpBnB,SAAS,CAAC,MAAM;IACduB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMsC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACtC,UAAU,CAACuC,IAAI,CAAC,CAAC,EAAE;IAExB,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAM3B,KAAK,CAACiD,IAAI,CAC/B,wBAAwB7C,OAAO,UAAU,EACzC;QACE8C,OAAO,EAAEzC,UAAU;QACnBgC,YAAY,EAAE1B,WAAW,CAAE;MAC7B,CAAC,EACD;QACEc,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUb,KAAK;QAChC;MACF,CACF,CAAC;MAED,MAAMkC,MAAM,GAAGxB,QAAQ,CAACI,IAAI,CAACqB,OAAO;;MAEpC;MACA,IAAI,CAACrC,WAAW,EAAE;QAChB,MAAMoB,aAAa,GAAGC,kBAAkB,CAACnB,KAAK,CAAC;QAC/C,MAAMsB,SAAS,GAAGY,MAAM,CAACX,SAAS,KAAKL,aAAa,GAChDgB,MAAM,CAACV,YAAY,GACnBU,MAAM,CAACX,SAAS;QACpBxB,cAAc,CAACuB,SAAS,CAAC;MAC3B;MAEA/B,WAAW,CAAE6C,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,MAAM,CAAC,CAAC;MACxCzC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZC,OAAO,CAAC/B,KAAK,CAAC8B,GAAG,CAAC;MAClB7B,QAAQ,CAAC,gCAAgC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKoD,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BrD,OAAA;MAAKoD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BrD,OAAA;QAAAqD,QAAA,GAAI,wEAAe,EAACnD,OAAO;MAAA;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjCzD,OAAA;QAAQoD,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEvD;MAAQ;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAENzD,OAAA;MAAKoD,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvB5C,OAAO,gBACNT,OAAA;QAAAqD,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAElBzD,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BhD,QAAQ,CAAC8B,MAAM,GAAG,CAAC,GAClB9B,QAAQ,CAACsD,GAAG,CAAEC,GAAG;UAAA,IAAAC,WAAA,EAAAC,cAAA;UAAA,oBACf9D,OAAA;YAEEoD,SAAS,EAAE,WACTQ,GAAG,CAACtB,SAAS,KAAKJ,kBAAkB,CAACnB,KAAK,CAAC,GACvC,cAAc,GACd,kBAAkB,EACrB;YAAAsC,QAAA,gBAEHrD,OAAA;cAAAqD,QAAA,GACGO,GAAG,CAACtB,SAAS,KAAKJ,kBAAkB,CAACnB,KAAK,CAAC,GACxC,IAAI,GACJ,EAAA8C,WAAA,GAAAD,GAAG,CAACG,MAAM,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,IAAI,KAAI,iBAAiBJ,GAAG,CAACtB,SAAS,EAAE,EAAE,GAAG,EAAC,SAC5D,EAAC,EAAAwB,cAAA,GAAAF,GAAG,CAACvB,SAAS,cAAAyB,cAAA,uBAAbA,cAAA,CAAeE,IAAI,KAAI,YAAY,EAAC,GACzC;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTzD,OAAA;cAAAqD,QAAA,EAAIO,GAAG,CAACZ;YAAO;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBzD,OAAA;cAAOoD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EACjC,IAAIY,IAAI,CAACL,GAAG,CAACM,UAAU,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;gBAC/CC,IAAI,EAAE,SAAS;gBACfC,MAAM,EAAE;cACV,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA,GAnBHG,GAAG,CAACU,EAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBR,CAAC;QAAA,CACP,CAAC,gBAEFzD,OAAA;UAAKoD,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACtD,eACDzD,OAAA;UAAKuE,GAAG,EAAErD;QAAe;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN,eAEDzD,OAAA;QAAMwE,QAAQ,EAAE7B,iBAAkB;QAACS,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9DrD,OAAA;UACEyE,IAAI,EAAC,MAAM;UACXrB,SAAS,EAAC,cAAc;UACxBsB,KAAK,EAAEnE,UAAW;UAClBoE,QAAQ,EAAG/B,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;UAC/CG,WAAW,EAAC;QAAsB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFzD,OAAA;UAAQyE,IAAI,EAAC,QAAQ;UAACrB,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAE7D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAEN9C,KAAK,iBAAIX,OAAA;QAAKoD,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAE1C;MAAK;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrD,EAAA,CAnKIH,UAAU;AAAA6E,EAAA,GAAV7E,UAAU;AAqKhB,SAASiC,kBAAkBA,CAACnB,KAAK,EAAE;EACjC,IAAI;IACF,MAAMgE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACnE,KAAK,CAACoE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,OAAO,CAACK,GAAG;EACpB,CAAC,CAAC,OAAOxC,CAAC,EAAE;IACV,OAAO,IAAI;EACb;AACF;AAEA,eAAe3C,UAAU;AAAC,IAAA6E,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}