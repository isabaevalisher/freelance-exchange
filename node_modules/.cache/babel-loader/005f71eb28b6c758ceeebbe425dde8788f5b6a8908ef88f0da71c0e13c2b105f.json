{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Profile\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('user_id');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!userId) {\n      setError('ID пользователя не найден.');\n      setLoading(false);\n      return;\n    }\n    const fetchProfile = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Очистить ошибки при новом запросе\n\n        // Отправка запроса на получение профиля\n        const profileRes = await axios.get(`/api/user/profile/${userId}/profile`);\n\n        // Проверяем, пришли ли данные от API\n        if (profileRes && profileRes.data && profileRes.data.user) {\n          setUser(profileRes.data.user); // Обновляем состояние профиля\n        } else {\n          setError('Не удалось получить данные профиля.');\n        }\n      } catch (err) {\n        console.error('Ошибка при запросе профиля:', err);\n        setError('Ошибка при загрузке данных. Попробуйте снова позже.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, [userId]);\n\n  // Логика отображения\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F: \", user.firstname, \" \", user.lastname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", user.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", user.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"KwigJa66YUmUYi6x1nVzLzkPv4M=\", false, function () {\n  return [useSearchParams];\n});\n_c = ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["useEffect","useState","useSearchParams","axios","jsxDEV","_jsxDEV","ProfilePage","_s","searchParams","userId","get","user","setUser","loading","setLoading","error","setError","fetchProfile","profileRes","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","firstname","lastname","email","city","phone","_c","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Profile/ProfilePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function ProfilePage() {\r\n  const [searchParams] = useSearchParams();\r\n  const userId = searchParams.get('user_id');\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setError('ID пользователя не найден.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchProfile = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null); // Очистить ошибки при новом запросе\r\n\r\n        // Отправка запроса на получение профиля\r\n        const profileRes = await axios.get(`/api/user/profile/${userId}/profile`);\r\n        \r\n        // Проверяем, пришли ли данные от API\r\n        if (profileRes && profileRes.data && profileRes.data.user) {\r\n          setUser(profileRes.data.user); // Обновляем состояние профиля\r\n        } else {\r\n          setError('Не удалось получить данные профиля.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка при запросе профиля:', err);\r\n        setError('Ошибка при загрузке данных. Попробуйте снова позже.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [userId]);\r\n\r\n  // Логика отображения\r\n  if (loading) return <p>Загрузка профиля...</p>;\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (!user) return <p>Профиль не найден.</p>;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-bold\">Профиль пользователя: {user.firstname} {user.lastname}</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>Город: {user.city}</p>\r\n      <p>Телефон: {user.phone}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}