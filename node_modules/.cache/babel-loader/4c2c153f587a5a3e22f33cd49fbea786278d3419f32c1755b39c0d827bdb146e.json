{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  orderId,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [recipientId, setRecipientId] = useState(null); // Добавляем состояние для recipientId\n\n  const token = localStorage.getItem(\"token\");\n\n  // Получение сообщений чата\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`/api/user/order/chat/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          setMessages(response.data.data.messages || response.data.data); // Поддержка разных структур\n          if (response.data.data && response.data.data.messages.length > 0) {\n            // Если сообщения получены, устанавливаем recipientId из первого сообщения\n            setRecipientId(response.data.data.messages[0].recipient_id);\n          }\n        } else {\n          setError(\"Не удалось загрузить сообщения.\");\n        }\n      } catch (err) {\n        console.error(err);\n        setError(\"Ошибка загрузки чата.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orderId) fetchMessages();\n  }, [orderId, token]);\n\n  // Отправка нового сообщения\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !recipientId) return;\n    try {\n      const response = await axios.post(`/api/user/order/chat/${orderId}/message`,\n      // Обновленный маршрут\n      {\n        message: newMessage,\n        recipient_id: recipientId // Используем recipientId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        const newMsg = response.data.data;\n        setMessages(prev => [...prev, newMsg]);\n        setNewMessage(\"\");\n      } else {\n        setError(\"Не удалось отправить сообщение.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Ошибка при отправке.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"\\u0427\\u0430\\u0442 \\u043F\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443 #\", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.length > 0 ? messages.map(msg => {\n          var _msg$sender, _msg$recipient;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender_id === getUserIdFromToken(token) ? \"message-sent\" : \"message-received\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender_id === getUserIdFromToken(token) ? \"Вы\" : ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || `Пользователь #${msg.sender_id}`, \" \", \"\\u2192 \", ((_msg$recipient = msg.recipient) === null || _msg$recipient === void 0 ? void 0 : _msg$recipient.name) || \"Получатель\", \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"message-timestamp\",\n              children: new Date(msg.created_at).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"message-form mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-2 w-100\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n// Функция для получения ID пользователя из токена\n_s(ChatWindow, \"jFmS5NbpviEkmrWE/gjhtOrV2l4=\");\n_c = ChatWindow;\nfunction getUserIdFromToken(token) {\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    return payload.sub;\n  } catch (e) {\n    return null;\n  }\n}\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatWindow","orderId","onClose","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","recipientId","setRecipientId","token","localStorage","getItem","fetchMessages","response","get","headers","Authorization","data","success","length","recipient_id","err","console","handleSendMessage","e","preventDefault","trim","post","message","newMsg","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","_msg$sender","_msg$recipient","sender_id","getUserIdFromToken","sender","name","recipient","content","Date","created_at","toLocaleTimeString","hour","minute","id","onSubmit","type","value","onChange","target","placeholder","_c","payload","JSON","parse","atob","split","sub","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Chat/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = ({ orderId, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [recipientId, setRecipientId] = useState(null);  // Добавляем состояние для recipientId\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Получение сообщений чата\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`/api/user/order/chat/${orderId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setMessages(response.data.data.messages || response.data.data); // Поддержка разных структур\r\n          if (response.data.data && response.data.data.messages.length > 0) {\r\n            // Если сообщения получены, устанавливаем recipientId из первого сообщения\r\n            setRecipientId(response.data.data.messages[0].recipient_id);\r\n          }\r\n        } else {\r\n          setError(\"Не удалось загрузить сообщения.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"Ошибка загрузки чата.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId) fetchMessages();\r\n  }, [orderId, token]);\r\n\r\n  // Отправка нового сообщения\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !recipientId) return;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/user/order/chat/${orderId}/message`, // Обновленный маршрут\r\n        {\r\n          message: newMessage,\r\n          recipient_id: recipientId,  // Используем recipientId\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        const newMsg = response.data.data;\r\n        setMessages((prev) => [...prev, newMsg]);\r\n        setNewMessage(\"\");\r\n      } else {\r\n        setError(\"Не удалось отправить сообщение.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Ошибка при отправке.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <h5>Чат по заказу #{orderId}</h5>\r\n        <button className=\"btn btn-close\" onClick={onClose}></button>\r\n      </div>\r\n\r\n      <div className=\"chat-body\">\r\n        {loading ? (\r\n          <p>Загрузка...</p>\r\n        ) : (\r\n          <div className=\"chat-messages\">\r\n            {messages.length > 0 ? (\r\n              messages.map((msg) => (\r\n                <div\r\n                  key={msg.id}\r\n                  className={`message ${\r\n                    msg.sender_id === getUserIdFromToken(token)\r\n                      ? \"message-sent\"\r\n                      : \"message-received\"\r\n                  }`}\r\n                >\r\n                  <strong>\r\n                    {msg.sender_id === getUserIdFromToken(token)\r\n                      ? \"Вы\"\r\n                      : msg.sender?.name || `Пользователь #${msg.sender_id}`}{\" \"}\r\n                    → {msg.recipient?.name || \"Получатель\"}:\r\n                  </strong>\r\n                  <p>{msg.content}</p>\r\n                  <small className=\"message-timestamp\">\r\n                    {new Date(msg.created_at).toLocaleTimeString([], {\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                    })}\r\n                  </small>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-messages\">Сообщений пока нет.</div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSendMessage} className=\"message-form mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Введите сообщение...\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary mt-2 w-100\">\r\n            Отправить\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Функция для получения ID пользователя из токена\r\nfunction getUserIdFromToken(token) {\r\n  try {\r\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n    return payload.sub;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}