{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tolik\\\\freelance-exchange\\\\src\\\\components\\\\pages\\\\Navbar\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  onClose\n}) => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Заглушка для списка диалогов (позже заменишь на fetch с бэкенда)\n  useEffect(() => {\n    const mockConversations = [{\n      id: 1,\n      user: \"Айдар\",\n      lastMessage: \"Привет, как дела?\",\n      messages: [{\n        id: 1,\n        sender: \"Айдар\",\n        content: \"Привет, как дела?\",\n        timestamp: \"10:00\"\n      }, {\n        id: 2,\n        sender: \"Вы\",\n        content: \"Привет! Хорошо, а у тебя?\",\n        timestamp: \"10:01\"\n      }]\n    }, {\n      id: 2,\n      user: \"Малика\",\n      lastMessage: \"Когда будет готов заказ?\",\n      messages: [{\n        id: 1,\n        sender: \"Малика\",\n        content: \"Когда будет готов заказ?\",\n        timestamp: \"09:30\"\n      }]\n    }];\n    setConversations(mockConversations);\n  }, []);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedConversation) return;\n    const updatedConversations = conversations.map(conv => {\n      if (conv.id === selectedConversation.id) {\n        return {\n          ...conv,\n          messages: [...conv.messages, {\n            id: conv.messages.length + 1,\n            sender: \"Вы\",\n            content: newMessage,\n            timestamp: new Date().toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })\n          }],\n          lastMessage: newMessage\n        };\n      }\n      return conv;\n    });\n    setConversations(updatedConversations);\n    setSelectedConversation(updatedConversations.find(conv => conv.id === selectedConversation.id));\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u0427\\u0430\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conv.id ? \"active\" : \"\"}`,\n          onClick: () => setSelectedConversation(conv),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item-user\",\n            children: conv.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item-message\",\n            children: conv.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, conv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            children: selectedConversation.messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.sender === \"Вы\" ? \"message-sent\" : \"message-received\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"message-timestamp\",\n                children: msg.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"message-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversation\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"vVLDO9E1oUwlikHDR6bM7AimSrA=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","onClose","_s","conversations","setConversations","selectedConversation","setSelectedConversation","newMessage","setNewMessage","mockConversations","id","user","lastMessage","messages","sender","content","timestamp","handleSendMessage","e","preventDefault","trim","updatedConversations","map","conv","length","Date","toLocaleTimeString","hour","minute","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","msg","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/tolik/freelance-exchange/src/components/pages/Navbar/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = ({ onClose }) => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  // Заглушка для списка диалогов (позже заменишь на fetch с бэкенда)\r\n  useEffect(() => {\r\n    const mockConversations = [\r\n      {\r\n        id: 1,\r\n        user: \"Айдар\",\r\n        lastMessage: \"Привет, как дела?\",\r\n        messages: [\r\n          { id: 1, sender: \"Айдар\", content: \"Привет, как дела?\", timestamp: \"10:00\" },\r\n          { id: 2, sender: \"Вы\", content: \"Привет! Хорошо, а у тебя?\", timestamp: \"10:01\" },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        user: \"Малика\",\r\n        lastMessage: \"Когда будет готов заказ?\",\r\n        messages: [\r\n          { id: 1, sender: \"Малика\", content: \"Когда будет готов заказ?\", timestamp: \"09:30\" },\r\n        ],\r\n      },\r\n    ];\r\n    setConversations(mockConversations);\r\n  }, []);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedConversation) return;\r\n\r\n    const updatedConversations = conversations.map((conv) => {\r\n      if (conv.id === selectedConversation.id) {\r\n        return {\r\n          ...conv,\r\n          messages: [\r\n            ...conv.messages,\r\n            {\r\n              id: conv.messages.length + 1,\r\n              sender: \"Вы\",\r\n              content: newMessage,\r\n              timestamp: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\r\n            },\r\n          ],\r\n          lastMessage: newMessage,\r\n        };\r\n      }\r\n      return conv;\r\n    });\r\n\r\n    setConversations(updatedConversations);\r\n    setSelectedConversation(updatedConversations.find((conv) => conv.id === selectedConversation.id));\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <h5>Чаты</h5>\r\n        <button className=\"btn btn-close\" onClick={onClose}></button>\r\n      </div>\r\n      <div className=\"chat-body\">\r\n        <div className=\"chat-list\">\r\n          {conversations.map((conv) => (\r\n            <div\r\n              key={conv.id}\r\n              className={`chat-item ${selectedConversation?.id === conv.id ? \"active\" : \"\"}`}\r\n              onClick={() => setSelectedConversation(conv)}\r\n            >\r\n              <div className=\"chat-item-user\">{conv.user}</div>\r\n              <div className=\"chat-item-message\">{conv.lastMessage}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {selectedConversation ? (\r\n            <>\r\n              <div className=\"messages\">\r\n                {selectedConversation.messages.map((msg) => (\r\n                  <div\r\n                    key={msg.id}\r\n                    className={`message ${msg.sender === \"Вы\" ? \"message-sent\" : \"message-received\"}`}\r\n                  >\r\n                    <strong>{msg.sender}: </strong>\r\n                    <span>{msg.content}</span>\r\n                    <small className=\"message-timestamp\">{msg.timestamp}</small>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <form onSubmit={handleSendMessage} className=\"message-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Введите сообщение...\"\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Отправить\r\n                </button>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-conversation\">Выберите диалог</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}